#+title: Bowling

* Preface
The group has been asked to develop software to score bowling games.
The hardware team is working on integrating with the pinsetter.
The graphics team is hard at work on some cheesy 3D animations.

The dev team has decided to split up the work.
Alice will be working on a module that that counts up the pins knocked down in the individual rolls and indicates fouls, splits, etc.
Bob will be working on displaying the scorecard.

You've been asked to write a calculator to sum an individual player's rolls and return their score for each frame.
The method should accept an array of rolls.
Possible values include zero through nine, a "/" indicating a spare, and an "X" indicating a strike.
The return value should be an array of scores for the frames the player has bowled.

The scoring method will be used to calculate a player's running score during the game, so it's important that the method work for games in progress.
For example,
[4, 5, "X", 8] should return [9, nil, nil], since the second and third frames can't be calculated yet.
When the second roll of the third frame comes in, all three frames should be returned, e.g. [4, 5, "X", 8, 1] would return [9, 19, 9]. (Note that these are the scores for the frames, not the running score).

* Running
** nota bene
This project is written in OCaml and uses the [[https://dune.build/][dune build system]]. Prior to running the following commands ensure you have it installed.

The primary module to interact with is [[file:lib/game.ml][Game]] however it generally expects arguments of type [[file:lib/input.ml][Input]], there is a helper function `Input.parse_list` you can use to convert a list of strings into inputs.
** repl
To open a repl up run `dune utop` from the root of the project. Once there you can `open Bowling` to have access to the modules.
#+begin_quote
─( 21:46:57 )─< command 0 >───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # open Bowling;;
─( 21:46:57 )─< command 1 >───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # ["X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"];;
- : string list =
["X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"]
─( 21:46:58 )─< command 2 >───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # ["X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"] |> Input.parse_list;;
- : Input.t list =
[Bowling.Input.String "X"; Bowling.Input.String "X"; Bowling.Input.String "X";
 Bowling.Input.String "X"; Bowling.Input.String "X"; Bowling.Input.String "X";
 Bowling.Input.String "X"; Bowling.Input.String "X"; Bowling.Input.String "X";
 Bowling.Input.String "X"; Bowling.Input.String "X"; Bowling.Input.String "X";
 Bowling.Input.String "X"]
─( 21:47:04 )─< command 3 >───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # ["X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"] |> Input.parse_list |> Game.score_inputs;;
- : int option list =
[Some 30; Some 30; Some 30; Some 30; Some 30; Some 30; Some 30; Some 30;
 Some 30; Some 30]
─( 21:47:08 )─< command 4 >───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop # ["X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"; "X"] |> Input.parse_list |> Game.running_score_of_inputs;;
- : int list = [30; 60; 90; 120; 150; 180; 210; 240; 270; 300]
─( 21:47:14 )─< command 5 >───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────{ counter: 0 }─
utop #
#+end_quote

** tests
Tests use `ppx_expect` and reside in `tests/bowling_test.ml`
#+begin_src shell
dune build @runtest
#+end_src
